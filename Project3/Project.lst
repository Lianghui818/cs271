Microsoft (R) Macro Assembler Version 14.29.30152.0	    11/05/23 20:55:31
#Program Template     (template.asm			     Page 1 - 1


				TITLE Program Template     (template.asm)

				; Author: Lianghui Wang
				; Last Modified: 2023/11/5
				; OSU email address: wangl9@oregonstate.edu
				; Course number/section:   CS271 Section 400
				; Project Number:  Project_3             Due Date: 2023/11/5
				; Description: This file is provided as a template from which you may work
				;              when developing assembly projects in CS271.

				INCLUDE Irvine32.inc
			      C ; Include file for Irvine32.lib             (Irvine32.inc)
			      C 
			      C ;OPTION CASEMAP:NONE		; optional: make identifiers case-sensitive
			      C 
			      C INCLUDE SmallWin.inc		; MS-Windows prototypes, structures, and constants
			      C .NOLIST
			      C .LIST
			      C 
			      C INCLUDE VirtualKeys.inc
			      C ; VirtualKeys.inc
			      C .NOLIST
			      C .LIST
			      C 
			      C 
			      C .NOLIST
			      C .LIST
			      C 

				; (insert macro definitions here)

				; (insert constant definitions here)
 =-000000C8			MIN_RANGE1		EQU		-200        ; 
 =-00000064			MAX_RANGE1		EQU		-100
 =-00000032			MIN_RANGE2		EQU		-50
 =-00000001			MAX_RANGE2		EQU		-1

 00000000			.data

 00000000 57 65 6C 63 6F	    intro1      BYTE        "Welcome to the Integer Accumulator by Lianghui Wang", 0
	   6D 65 20 74 6F
	   20 74 68 65 20
	   49 6E 74 65 67
	   65 72 20 41 63
	   63 75 6D 75 6C
	   61 74 6F 72 20
	   62 79 20 4C 69
	   61 6E 67 68 75
	   69 20 57 61 6E
	   67 00
 00000034 57 65 20 77 69	    intro2      BYTE        "We will be accumulating user-input negative integers between the specified bounds, then displaying", 0dh, 0ah
	   6C 6C 20 62 65
	   20 61 63 63 75
	   6D 75 6C 61 74
	   69 6E 67 20 75
	   73 65 72 2D 69
	   6E 70 75 74 20
	   6E 65 67 61 74
	   69 76 65 20 69
	   6E 74 65 67 65
	   72 73 20 62 65
	   74 77 65 65 6E
	   20 74 68 65 20
	   73 70 65 63 69
	   66 69 65 64 20
	   62 6F 75 6E 64
	   73 2C 20 74 68
	   65 6E 20 64 69
	   73 70 6C 61 79
	   69 6E 67 0D 0A
 00000098  73 74 61 74 69	                BYTE        "statistics of the input values including minimum, maximum, and average values values, total sum,", 0dh, 0ah
	   73 74 69 63 73
	   20 6F 66 20 74
	   68 65 20 69 6E
	   70 75 74 20 76
	   61 6C 75 65 73
	   20 69 6E 63 6C
	   75 64 69 6E 67
	   20 6D 69 6E 69
	   6D 75 6D 2C 20
	   6D 61 78 69 6D
	   75 6D 2C 20 61
	   6E 64 20 61 76
	   65 72 61 67 65
	   20 76 61 6C 75
	   65 73 20 76 61
	   6C 75 65 73 2C
	   20 74 6F 74 61
	   6C 20 73 75 6D
	   2C 0D 0A
 000000FA  61 6E 64 20 74	                BYTE        "and total number of valid inputs.", 0dh, 0ah
	   6F 74 61 6C 20
	   6E 75 6D 62 65
	   72 20 6F 66 20
	   76 61 6C 69 64
	   20 69 6E 70 75
	   74 73 2E 0D 0A
 0000011D 57 68 61 74 20	    prompt1     BYTE        "What is your name? ", 0
	   69 73 20 79 6F
	   75 72 20 6E 61
	   6D 65 3F 20 00
 00000131 48 65 6C 6C 6F	    prompt2     BYTE        "Hello there, ", 0
	   20 74 68 65 72
	   65 2C 20 00
 0000013F 20 45 6E 74 65	    prompt3     BYTE        " Enter number: ", 0
	   72 20 6E 75 6D
	   62 65 72 3A 20
	   00
 0000014F 50 6C 65 61 73	    input1      BYTE        "Please enter numbers in [-200, -100] or [-50, -1].", 0
	   65 20 65 6E 74
	   65 72 20 6E 75
	   6D 62 65 72 73
	   20 69 6E 20 5B
	   2D 32 30 30 2C
	   20 2D 31 30 30
	   5D 20 6F 72 20
	   5B 2D 35 30 2C
	   20 2D 31 5D 2E
	   00
 00000182 45 6E 74 65 72	    input2      BYTE        "Enter a non-negative number when you are finished, and input stats will be shown.", 0dh, 0ah
	   20 61 20 6E 6F
	   6E 2D 6E 65 67
	   61 74 69 76 65
	   20 6E 75 6D 62
	   65 72 20 77 68
	   65 6E 20 79 6F
	   75 20 61 72 65
	   20 66 69 6E 69
	   73 68 65 64 2C
	   20 61 6E 64 20
	   69 6E 70 75 74
	   20 73 74 61 74
	   73 20 77 69 6C
	   6C 20 62 65 20
	   73 68 6F 77 6E
	   2E 0D 0A
 000001D5 54 68 69 73 20	    msg1        BYTE        "This is not a number we're looking for (Invalid Input)!", 0
	   69 73 20 6E 6F
	   74 20 61 20 6E
	   75 6D 62 65 72
	   20 77 65 27 72
	   65 20 6C 6F 6F
	   6B 69 6E 67 20
	   66 6F 72 20 28
	   49 6E 76 61 6C
	   69 64 20 49 6E
	   70 75 74 29 21
	   00
 0000020D 59 6F 75 20 65	    msg2        BYTE        "You entered ", 0
	   6E 74 65 72 65
	   64 20 00
 0000021A 20 76 61 6C 69	    msg3        BYTE        " valid numbers.", 0
	   64 20 6E 75 6D
	   62 65 72 73 2E
	   00
 0000022A 4E 6F 20 76 61	    msg4        BYTE        "No valid numbers were entered.", 0
	   6C 69 64 20 6E
	   75 6D 62 65 72
	   73 20 77 65 72
	   65 20 65 6E 74
	   65 72 65 64 2E
	   00
 00000249 54 68 65 20 6D	    disp1       BYTE        "The maximum valid number is ", 0
	   61 78 69 6D 75
	   6D 20 76 61 6C
	   69 64 20 6E 75
	   6D 62 65 72 20
	   69 73 20 00
 00000266 54 68 65 20 6D	    disp2       BYTE        "The minimum valid number is ", 0
	   69 6E 69 6D 75
	   6D 20 76 61 6C
	   69 64 20 6E 75
	   6D 62 65 72 20
	   69 73 20 00
 00000283 54 68 65 20 73	    disp3       BYTE        "The sum of your valid numbers is ", 0
	   75 6D 20 6F 66
	   20 79 6F 75 72
	   20 76 61 6C 69
	   64 20 6E 75 6D
	   62 65 72 73 20
	   69 73 20 00
 000002A5 54 68 65 20 72	    disp4       BYTE        "The rounded average is ", 0
	   6F 75 6E 64 65
	   64 20 61 76 65
	   72 61 67 65 20
	   69 73 20 00
 000002BD 57 65 20 68 61	    goodbye     BYTE        "We have to stop meeting like this. Farewell, ", 0
	   76 65 20 74 6F
	   20 73 74 6F 70
	   20 6D 65 65 74
	   69 6E 67 20 6C
	   69 6B 65 20 74
	   68 69 73 2E 20
	   46 61 72 65 77
	   65 6C 6C 2C 20
	   00
 000002EB FFFFFF37		    maxNum      SDWORD      -201          ; Initialize the maximum number with -201
 000002EF 00000000		    minNum      SDWORD      0             ; Initialize the minimum number with 0
 000002F3 00000000		    sum         SDWORD      0             ; Initialize the sum with 0
 000002F7 00000000		    avg         SDWORD      0             ; Initialize the average with 0
 000002FB 00000000		    count       DWORD       0             ; Initialize the count with 0
 000002FF  00000015 [		    userName    BYTE        21 DUP(0)     ; Store the user's name
	    00
	   ]
 00000314 00000001		    count_1     DWORD       1             ; Counter for line numbers during input
 00000318 2D 2D 50 72 6F	    excd1       BYTE        "--Program Intro--", 0
	   67 72 61 6D 20
	   49 6E 74 72 6F
	   2D 2D 00
 0000032A 2A 2A 45 43 3A	    excd2       BYTE        "**EC: Number the lines during user input. Increment the line number only for valid number entries. ", 0
	   20 4E 75 6D 62
	   65 72 20 74 68
	   65 20 6C 69 6E
	   65 73 20 64 75
	   72 69 6E 67 20
	   75 73 65 72 20
	   69 6E 70 75 74
	   2E 20 49 6E 63
	   72 65 6D 65 6E
	   74 20 74 68 65
	   20 6C 69 6E 65
	   20 6E 75 6D 62
	   65 72 20 6F 6E
	   6C 79 20 66 6F
	   72 20 76 61 6C
	   69 64 20 6E 75
	   6D 62 65 72 20
	   65 6E 74 72 69
	   65 73 2E 20 00
 0000038E 2A 2A 45 43 3A	    excd3       BYTE        "**EC: Calculate and display the average as a decimal-point number , rounded to the nearest .01. ", 0
	   20 43 61 6C 63
	   75 6C 61 74 65
	   20 61 6E 64 20
	   64 69 73 70 6C
	   61 79 20 74 68
	   65 20 61 76 65
	   72 61 67 65 20
	   61 73 20 61 20
	   64 65 63 69 6D
	   61 6C 2D 70 6F
	   69 6E 74 20 6E
	   75 6D 62 65 72
	   20 2C 20 72 6F
	   75 6E 64 65 64
	   20 74 6F 20 74
	   68 65 20 6E 65
	   61 72 65 73 74
	   20 2E 30 31 2E
	   20 00
 000003EF 2D 2D 50 72 6F	    excd4       BYTE        "--Program prompts, etc--", 0dh, 0ah
	   67 72 61 6D 20
	   70 72 6F 6D 70
	   74 73 2C 20 65
	   74 63 2D 2D 0D
	   0A
 00000409 00000000		    rema        DWORD       ?
 0000040D 2E 00			    floatp      BYTE        ".", 0
 0000040F 41 73 20 61 20	    fltpro      BYTE        "As a floating point number: ", 0
	   66 6C 6F 61 74
	   69 6E 67 20 70
	   6F 69 6E 74 20
	   6E 75 6D 62 65
	   72 3A 20 00
 0000042C FFFFFC18		    neg1k       DWORD       -1000
 00000430 000003E8		    pos1k       DWORD       1000
 00000434 00000000		    subt        DWORD       ?
 00000438 00000000		    floatp_1    DWORD       ?

 00000000			.code

 00000000			main PROC
				    ; Display the program introduction and programmer¡¯s name
 00000000  BA 00000000 R	    mov         edx,    OFFSET intro1                       ; print introductions
 00000005  E8 00000000 E	    call        WriteString
 0000000A  E8 00000000 E	    call        Crlf
 0000000F  BA 00000034 R	    mov         edx,    OFFSET intro2                       
 00000014  E8 00000000 E	    call        WriteString
 00000019  E8 00000000 E	    call        Crlf

				    ; Get the user's name and greet the user
 0000001E  BA 0000011D R	    mov         edx,    OFFSET prompt1                     ; ask user's name
 00000023  E8 00000000 E	    call        WriteString
 00000028  BA 000002FF R	    mov         edx,    OFFSET userName                    ; read and space the name
 0000002D  B9 00000015		    mov         ecx,    SIZEOF userName
 00000032  E8 00000000 E	    call        ReadString

 00000037  BA 00000131 R	    mov         edx,    OFFSET prompt2                       ; print greetins message
 0000003C  E8 00000000 E	    call        WriteString
 00000041  BA 000002FF R	    mov         edx,    OFFSET userName     
 00000046  E8 00000000 E	    call        WriteString
 0000004B  E8 00000000 E	    call        Crlf

				    ; Display instructions for the user
 00000050  BA 0000014F R	    mov         edx,    OFFSET input1                       ; print instructions for numbers range
 00000055  E8 00000000 E	    call        WriteString
 0000005A  E8 00000000 E	    call        Crlf
 0000005F  BA 00000182 R	    mov         edx,    OFFSET input2
 00000064  E8 00000000 E	    call        WriteString
 00000069  E8 00000000 E	    call        Crlf
 0000006E  BA 00000318 R	    mov         edx,    OFFSET excd1                       
 00000073  E8 00000000 E	    call        WriteString
 00000078  E8 00000000 E	    call        Crlf
 0000007D  BA 0000032A R	    mov         edx,    OFFSET excd2                      
 00000082  E8 00000000 E	    call        WriteString
 00000087  E8 00000000 E	    call        Crlf
 0000008C  BA 000003EF R	    mov         edx,    OFFSET excd4              
 00000091  E8 00000000 E	    call        WriteString
 00000096  E8 00000000 E	    call        Crlf
				; Repeatedly prompt the user to enter a number.

 0000009B			Loopforinput:
				    ; Loop for user to enter numbers
 0000009B  A1 00000314 R	    mov         eax,    count_1
 000000A0  E8 00000000 E	    call        WriteDec
 000000A5  83 C0 01		    add         eax,    1
 000000A8  A3 00000314 R	    mov         count_1,    eax
				    
 000000AD  BA 0000013F R	    mov         edx,    OFFSET prompt3
 000000B2  E8 00000000 E	    call        WriteString
 000000B7  E8 00000000 E	    call        ReadInt
 000000BC  83 F8 00		    cmp         eax,    0
 000000BF  79 51		    JNS         endLoop                               ; if user enter a non-negative number, then goto extLoop
				    
				    ; Check if number is within first range
 000000C1  3D FFFFFF38		    cmp         eax,    MIN_RANGE1
 000000C6  7C 05		    jl          NumberOutOfRange
 000000C8  83 F8 9C		    cmp         eax,    MAX_RANGE1
 000000CB  7E 0C		    jle         NumberIsValid
				    
				; Check if number is within second range
 000000CD			NumberOutOfRange:
 000000CD  83 F8 CE		    cmp         eax,    MIN_RANGE2
 000000D0  7C 2F		    jl          err
 000000D2  83 F8 FF		    cmp         eax,    MAX_RANGE2
 000000D5  7E 02		    jle         NumberIsValid
 000000D7  EB 28		    jmp         err

				; check the number is valid   
 000000D9			NumberIsValid:
				    ; Update sum, max, and min
 000000D9  01 05 000002F3 R	    add         sum,    eax
 000000DF  3B 05 000002EB R	    cmp         eax,    maxNum
 000000E5  7E 05		    jle         CheckMin
 000000E7  A3 000002EB R	    mov         maxNum,     eax             ; check and update the max number

				; check and update the min number
 000000EC			CheckMin:
 000000EC  3B 05 000002EF R	    cmp         eax,    minNum
 000000F2  7D 05		    jge         ContinueLoop
 000000F4  A3 000002EF R	    mov         minNum,     eax

 000000F9			ContinueLoop:
				    ; count the valid numbers
 000000F9  FF 05 000002FB R	    inc         count
 000000FF  EB 9A		    jmp         Loopforinput

				; Notify the user of any invalid numbers
 00000101			err:
				    ; Only print the error message if an invalid number was entered
 00000101  BA 000001D5 R	    mov         edx,    OFFSET msg1
 00000106  E8 00000000 E	    call        WriteString
 0000010B  E8 00000000 E	    call        Crlf
 00000110  EB 89		    jmp         Loopforinput

 00000112			endLoop:
				    ; Check if any valid numbers were entered
 00000112  83 3D 000002FB R	    cmp         count,  0
	   00
 00000119  75 14		    jne         displaypart         
				    ; if the number is invalid, print message to tell user no valid numbers were entered
 0000011B  BA 0000022A R	    mov         edx,    OFFSET msg4
 00000120  E8 00000000 E	    call        WriteString
 00000125  E8 00000000 E	    call        Crlf
 0000012A  E9 00000141		    jmp         gbye

				    ; otherwise

 0000012F			displaypart:
 0000012F  8B 35 000002F3 R	    mov         esi,    sum
 00000135  8B 3D 000002FB R	    mov         edi,    count
 0000013B  DB 05 000002F3 R	    fild        sum     
 00000141  DA 35 000002FB R	    fidiv       count

 00000147  E8 00000000 E	    call        CrLf
 0000014C  BA 0000020D R	    mov         edx,    OFFSET msg2                        ; display number of valid numbers
 00000151  E8 00000000 E	    call        WriteString
 00000156  8B C7		    mov         eax,    edi
 00000158  E8 00000000 E	    call        WriteDec
 0000015D  BA 0000021A R	    mov         edx,    OFFSET msg3
 00000162  E8 00000000 E	    call        WriteString
 00000167  E8 00000000 E	    call        Crlf

 0000016C  BA 00000249 R	    mov         edx,    OFFSET disp1                       ; display maximum number
 00000171  E8 00000000 E	    call        WriteString
 00000176  A1 000002EB R	    mov         eax,    maxNum
 0000017B  E8 00000000 E	    call        WriteInt
 00000180  E8 00000000 E	    call        Crlf

 00000185  BA 00000266 R	    mov         edx,    OFFSET disp2                       ; display minimum number
 0000018A  E8 00000000 E	    call        WriteString
 0000018F  A1 000002EF R	    mov         eax,    minNum
 00000194  E8 00000000 E	    call        WriteInt
 00000199  E8 00000000 E	    call        Crlf

 0000019E  BA 00000283 R	    mov         edx,    OFFSET disp3                       ; display the sum of the given numbers
 000001A3  E8 00000000 E	    call        WriteString
 000001A8  A1 000002F3 R	    mov         eax,    sum
 000001AD  E8 00000000 E	    call        WriteInt
 000001B2  E8 00000000 E	    call        Crlf

 000001B7  BA 000002A5 R	    mov         edx,    OFFSET disp4                       ; display rounded average of the given numbers
 000001BC  E8 00000000 E	    call        WriteString
 000001C1  D9 FC		    frndint
 000001C3  DB 15 000002F7 R	    fist        avg
 000001C9  A1 000002F7 R	    mov         eax,    avg
 000001CE  E8 00000000 E	    call        WriteInt
 000001D3  E8 00000000 E	    call        Crlf

				    ; integer average for accumulator
 000001D8  BA 00000318 R	    mov         edx,    OFFSET excd1                       
 000001DD  E8 00000000 E	    call        WriteString
 000001E2  E8 00000000 E	    call        Crlf
 000001E7  BA 0000038E R	    mov         edx,    OFFSET excd3                      
 000001EC  E8 00000000 E	    call        WriteString
 000001F1  E8 00000000 E	    call        Crlf
 000001F6  BA 000003EF R	    mov         edx,    OFFSET excd4              
 000001FB  E8 00000000 E	    call        WriteString
 00000200  E8 00000000 E	    call        Crlf
 00000205  89 15 00000409 R	    mov         rema,   edx
 0000020B  BA 0000040F R	    mov         edx,    OFFSET fltpro
 00000210  E8 00000000 E	    call        WriteString
 00000215  E8 00000000 E	    call        WriteInt
 0000021A  BA 0000040D R	    mov         edx,    OFFSET floatp
 0000021F  E8 00000000 E	    call    WriteString


				    ; Convert the integer average to a floating point representation and display it
 00000224  A1 00000409 R	    mov         eax,    rema
 00000229  F7 25 0000042C R	    mul         neg1k
 0000022F  A3 00000409 R	    mov         rema,   eax 
 00000234  A1 00000314 R	    mov         eax,    count_1
 00000239  83 E8 02		    sub         eax,    2          
 0000023C  F7 25 00000430 R	    mul         pos1k
 00000242  A3 00000434 R	    mov         subt, eax

 00000247  D9 05 00000409 R	    fld         rema
 0000024D  D8 35 00000434 R	    fdiv        subt
 00000253  DA 0D 00000430 R	    fimul       pos1k
 00000259  D9 FC		    frndint
 0000025B  DB 15 00000438 R	    fist        floatp_1
 00000261  A1 00000438 R	    mov         eax,    floatp_1
 00000266  E8 00000000 E	    call        WriteDec
 0000026B  E8 00000000 E	    call        CrLf


				; Say goodbye to the user and exit the program
 00000270			gbye:                                              ; print goodbye message
 00000270  BA 000002BD R	    mov         edx,    OFFSET goodbye
 00000275  E8 00000000 E	    call        WriteString
 0000027A  BA 000002FF R	    mov         edx,    OFFSET userName
 0000027F  E8 00000000 E	    call        WriteString
 00000284  E8 00000000 E	    call        Crlf
				    Invoke  ExitProcess, 0
 00000289  6A 00	   *	    push   +000000000h
 0000028B  E8 00000000 E   *	    call   ExitProcess

 00000290			main ENDP

				END main
Microsoft (R) Macro Assembler Version 14.29.30152.0	    11/05/23 20:55:31
#Program Template     (template.asm			     Symbols 2 - 1




Structures and Unions:

                N a m e                  Size
                                         Offset      Type

CONSOLE_CURSOR_INFO  . . . . . .	 00000008
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  bVisible . . . . . . . . . . .	 00000004	 DWord
CONSOLE_SCREEN_BUFFER_INFO . . .	 00000016
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCursorPosition . . . . . . .	 00000004	 DWord
  wAttributes  . . . . . . . . .	 00000008	 Word
  srWindow . . . . . . . . . . .	 0000000A	 QWord
  dwMaximumWindowSize  . . . . .	 00000012	 DWord
COORD  . . . . . . . . . . . . .	 00000004
  X  . . . . . . . . . . . . . .	 00000000	 Word
  Y  . . . . . . . . . . . . . .	 00000002	 Word
FILETIME . . . . . . . . . . . .	 00000008
  loDateTime . . . . . . . . . .	 00000000	 DWord
  hiDateTime . . . . . . . . . .	 00000004	 DWord
FOCUS_EVENT_RECORD . . . . . . .	 00000004
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
FPU_ENVIRON  . . . . . . . . . .	 0000001C
  controlWord  . . . . . . . . .	 00000000	 Word
  statusWord . . . . . . . . . .	 00000004	 Word
  tagWord  . . . . . . . . . . .	 00000008	 Word
  instrPointerOffset . . . . . .	 0000000C	 DWord
  instrPointerSelector . . . . .	 00000010	 DWord
  operandPointerOffset . . . . .	 00000014	 DWord
  operandPointerSelector . . . .	 00000018	 Word
INPUT_RECORD . . . . . . . . . .	 00000014
  EventType  . . . . . . . . . .	 00000000	 Word
  Event  . . . . . . . . . . . .	 00000004	 XmmWord
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCommandId  . . . . . . . . .	 00000000	 DWord
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
KEY_EVENT_RECORD . . . . . . . .	 00000010
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
MENU_EVENT_RECORD  . . . . . . .	 00000004
  dwCommandId  . . . . . . . . .	 00000000	 DWord
MOUSE_EVENT_RECORD . . . . . . .	 00000010
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
SMALL_RECT . . . . . . . . . . .	 00000008
  Left . . . . . . . . . . . . .	 00000000	 Word
  Top  . . . . . . . . . . . . .	 00000002	 Word
  Right  . . . . . . . . . . . .	 00000004	 Word
  Bottom . . . . . . . . . . . .	 00000006	 Word
SYSTEMTIME . . . . . . . . . . .	 00000010
  wYear  . . . . . . . . . . . .	 00000000	 Word
  wMonth . . . . . . . . . . . .	 00000002	 Word
  wDayOfWeek . . . . . . . . . .	 00000004	 Word
  wDay . . . . . . . . . . . . .	 00000006	 Word
  wHour  . . . . . . . . . . . .	 00000008	 Word
  wMinute  . . . . . . . . . . .	 0000000A	 Word
  wSecond  . . . . . . . . . . .	 0000000C	 Word
  wMilliseconds  . . . . . . . .	 0000000E	 Word
WINDOW_BUFFER_SIZE_RECORD  . . .	 00000004
  dwSize . . . . . . . . . . . .	 00000000	 DWord


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 0000043C Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 00000290 Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

CloseFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CloseHandle  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Clrscr . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateFileA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateOutputFile . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Crlf . . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Delay  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpMem  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpRegs . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToDosDateTime  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToSystemTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FlushConsoleInputBuffer  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FormatMessageA . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandLineA  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandTail . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCP . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleScreenBufferInfo . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetDateTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetFileTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetKeyState  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLastError . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMaxXY . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMseconds  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetNumberOfConsoleInputEvents  .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetProcessHeap . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetStdHandle . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemTime  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTickCount . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Gotoxy . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapAlloc  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapCreate . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapDestroy  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapFree . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapSize . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
IsDigit  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
LocalFree  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MessageBoxA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBoxAsk  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBox . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
OpenInputFile  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseDecimal32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseInteger32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PeekConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Random32 . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RandomRange  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Randomize  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadChar . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleA . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadDec  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFile . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFloat  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFromFile . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadHex  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadInt  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKeyFlush . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKey  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadString . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorPosition . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleScreenBufferSize . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTextAttribute  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTitleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleWindowInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetFilePointer . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ShowFPUStack . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Sleep  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
StrLength  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_compare  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_copy . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_length . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_trim . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_ucase  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SystemTimeToFileTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WaitMsg  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBinB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBin . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteChar  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleA  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputAttribute  . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputCharacterA . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteDec . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFloat . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHexB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHex . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteInt . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrameName  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrame  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteString  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteToFile  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteWindowsMsg  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
main . . . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 00000290 Public STDCALL
  Loopforinput . . . . . . . . .	L Near	 0000009B _TEXT	
  NumberOutOfRange . . . . . . .	L Near	 000000CD _TEXT	
  NumberIsValid  . . . . . . . .	L Near	 000000D9 _TEXT	
  CheckMin . . . . . . . . . . .	L Near	 000000EC _TEXT	
  ContinueLoop . . . . . . . . .	L Near	 000000F9 _TEXT	
  err  . . . . . . . . . . . . .	L Near	 00000101 _TEXT	
  endLoop  . . . . . . . . . . .	L Near	 00000112 _TEXT	
  displaypart  . . . . . . . . .	L Near	 0000012F _TEXT	
  gbye . . . . . . . . . . . . .	L Near	 00000270 _TEXT	
printf . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
scanf  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
wsprintfA  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
ALT_MASK . . . . . . . . . . . .	Number	 00000003h   
CAPSLOCK_ON  . . . . . . . . . .	Number	 00000080h   
CREATE_ALWAYS  . . . . . . . . .	Number	 00000002h   
CREATE_NEW . . . . . . . . . . .	Number	 00000001h   
CTRL_MASK  . . . . . . . . . . .	Number	 0000000Ch   
CreateFile . . . . . . . . . . .	Text   	 CreateFileA
DO_NOT_SHARE . . . . . . . . . .	Number	 00000000h   
ENABLE_ECHO_INPUT  . . . . . . .	Number	 00000004h   
ENABLE_LINE_INPUT  . . . . . . .	Number	 00000002h   
ENABLE_MOUSE_INPUT . . . . . . .	Number	 00000010h   
ENABLE_PROCESSED_INPUT . . . . .	Number	 00000001h   
ENABLE_PROCESSED_OUTPUT  . . . .	Number	 00000001h   
ENABLE_WINDOW_INPUT  . . . . . .	Number	 00000008h   
ENABLE_WRAP_AT_EOL_OUTPUT  . . .	Number	 00000002h   
ENHANCED_KEY . . . . . . . . . .	Number	 00000100h   
FALSE  . . . . . . . . . . . . .	Number	 00000000h   
FILE_APPEND_DATA . . . . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_ARCHIVE . . . . .	Number	 00000020h   
FILE_ATTRIBUTE_COMPRESSED  . . .	Number	 00000800h   
FILE_ATTRIBUTE_DEVICE  . . . . .	Number	 00000040h   
FILE_ATTRIBUTE_DIRECTORY . . . .	Number	 00000010h   
FILE_ATTRIBUTE_ENCRYPTED . . . .	Number	 00004000h   
FILE_ATTRIBUTE_HIDDEN  . . . . .	Number	 00000002h   
FILE_ATTRIBUTE_NORMAL  . . . . .	Number	 00000080h   
FILE_ATTRIBUTE_NOT_CONTENT_INDEXED .	Number	 00002000h   
FILE_ATTRIBUTE_OFFLINE . . . . .	Number	 00001000h   
FILE_ATTRIBUTE_READONLY  . . . .	Number	 00000001h   
FILE_ATTRIBUTE_REPARSE_POINT . .	Number	 00000400h   
FILE_ATTRIBUTE_SPARSE_FILE . . .	Number	 00000200h   
FILE_ATTRIBUTE_SYSTEM  . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_TEMPORARY . . . .	Number	 00000100h   
FILE_BEGIN . . . . . . . . . . .	Number	 00000000h   
FILE_CURRENT . . . . . . . . . .	Number	 00000001h   
FILE_DELETE_CHILD  . . . . . . .	Number	 00000040h   
FILE_END . . . . . . . . . . . .	Number	 00000002h   
FILE_READ_DATA . . . . . . . . .	Number	 00000001h   
FILE_SHARE_DELETE  . . . . . . .	Number	 00000004h   
FILE_SHARE_READ  . . . . . . . .	Number	 00000001h   
FILE_SHARE_WRITE . . . . . . . .	Number	 00000002h   
FILE_WRITE_DATA  . . . . . . . .	Number	 00000002h   
FOCUS_EVENT  . . . . . . . . . .	Number	 00000010h   
FORMAT_MESSAGE_ALLOCATE_BUFFER .	Number	 00000100h   
FORMAT_MESSAGE_FROM_SYSTEM . . .	Number	 00001000h   
FormatMessage  . . . . . . . . .	Text   	 FormatMessageA
GENERIC_ALL  . . . . . . . . . .	Number	 10000000h   
GENERIC_EXECUTE  . . . . . . . .	Number	 20000000h   
GENERIC_READ . . . . . . . . . .	Number	 -80000000h   
GENERIC_WRITE  . . . . . . . . .	Number	 40000000h   
GetCommandLine . . . . . . . . .	Text   	 GetCommandLineA
HANDLE . . . . . . . . . . . . .	Text   	 DWORD
HEAP_GENERATE_EXCEPTIONS . . . .	Number	 00000004h   
HEAP_GROWABLE  . . . . . . . . .	Number	 00000002h   
HEAP_NO_SERIALIZE  . . . . . . .	Number	 00000001h   
HEAP_REALLOC_IN_PLACE_ONLY . . .	Number	 00000010h   
HEAP_ZERO_MEMORY . . . . . . . .	Number	 00000008h   
IDABORT  . . . . . . . . . . . .	Number	 00000003h   
IDCANCEL . . . . . . . . . . . .	Number	 00000002h   
IDCLOSE  . . . . . . . . . . . .	Number	 00000008h   
IDCONTINUE . . . . . . . . . . .	Number	 0000000Bh   
IDHELP . . . . . . . . . . . . .	Number	 00000009h   
IDIGNORE . . . . . . . . . . . .	Number	 00000005h   
IDNO . . . . . . . . . . . . . .	Number	 00000007h   
IDOK . . . . . . . . . . . . . .	Number	 00000001h   
IDRETRY  . . . . . . . . . . . .	Number	 00000004h   
IDTIMEOUT  . . . . . . . . . . .	Number	 00007D00h   
IDTRYAGAIN . . . . . . . . . . .	Number	 0000000Ah   
IDYES  . . . . . . . . . . . . .	Number	 00000006h   
INVALID_HANDLE_VALUE . . . . . .	Number	 -00000001h   
KBDOWN_FLAG  . . . . . . . . . .	Number	 00000001h   
KEY_EVENT  . . . . . . . . . . .	Number	 00000001h   
KEY_MASKS  . . . . . . . . . . .	Number	 0000001Fh   
LEFT_ALT_PRESSED . . . . . . . .	Number	 00000002h   
LEFT_CTRL_PRESSED  . . . . . . .	Number	 00000008h   
MAX_RANGE1 . . . . . . . . . . .	Number	 -00000064h   
MAX_RANGE2 . . . . . . . . . . .	Number	 -00000001h   
MB_ABORTRETRYIGNORE  . . . . . .	Number	 00000002h   
MB_APPLMODAL . . . . . . . . . .	Number	 00000000h   
MB_CANCELTRYCONTINUE . . . . . .	Number	 00000006h   
MB_DEFBUTTON1  . . . . . . . . .	Number	 00000000h   
MB_DEFBUTTON2  . . . . . . . . .	Number	 00000100h   
MB_DEFBUTTON3  . . . . . . . . .	Number	 00000200h   
MB_DEFBUTTON4  . . . . . . . . .	Number	 00000300h   
MB_HELP  . . . . . . . . . . . .	Number	 00004000h   
MB_ICONASTERISK  . . . . . . . .	Number	 00000040h   
MB_ICONERROR . . . . . . . . . .	Number	 00000010h   
MB_ICONEXCLAMATION . . . . . . .	Number	 00000030h   
MB_ICONHAND  . . . . . . . . . .	Number	 00000010h   
MB_ICONINFORMATION . . . . . . .	Number	 00000040h   
MB_ICONQUESTION  . . . . . . . .	Number	 00000020h   
MB_ICONSTOP  . . . . . . . . . .	Number	 00000010h   
MB_ICONWARNING . . . . . . . . .	Number	 00000030h   
MB_OKCANCEL  . . . . . . . . . .	Number	 00000001h   
MB_OK  . . . . . . . . . . . . .	Number	 00000000h   
MB_RETRYCANCEL . . . . . . . . .	Number	 00000005h   
MB_SYSTEMMODAL . . . . . . . . .	Number	 00001000h   
MB_TASKMODAL . . . . . . . . . .	Number	 00002000h   
MB_USERICON  . . . . . . . . . .	Number	 00000080h   
MB_YESNOCANCEL . . . . . . . . .	Number	 00000003h   
MB_YESNO . . . . . . . . . . . .	Number	 00000004h   
MENU_EVENT . . . . . . . . . . .	Number	 00000008h   
MIN_RANGE1 . . . . . . . . . . .	Number	 -000000C8h   
MIN_RANGE2 . . . . . . . . . . .	Number	 -00000032h   
MOUSE_EVENT  . . . . . . . . . .	Number	 00000002h   
MessageBox . . . . . . . . . . .	Text   	 MessageBoxA
NULL . . . . . . . . . . . . . .	Number	 00000000h   
NUMLOCK_ON . . . . . . . . . . .	Number	 00000020h   
OPEN_ALWAYS  . . . . . . . . . .	Number	 00000004h   
OPEN_EXISTING  . . . . . . . . .	Number	 00000003h   
PeekConsoleInput . . . . . . . .	Text   	 PeekConsoleInputA
RIGHT_ALT_PRESSED  . . . . . . .	Number	 00000001h   
RIGHT_CTRL_PRESSED . . . . . . .	Number	 00000004h   
ReadConsoleInput . . . . . . . .	Text   	 ReadConsoleInputA
ReadConsole  . . . . . . . . . .	Text   	 ReadConsoleA
SCROLLLOCK_ON  . . . . . . . . .	Number	 00000040h   
SHIFT_MASK . . . . . . . . . . .	Number	 00000010h   
SHIFT_PRESSED  . . . . . . . . .	Number	 00000010h   
STD_ERROR_HANDLE . . . . . . . .	Number	 -0000000Ch   
STD_INPUT_HANDLE . . . . . . . .	Number	 -0000000Ah   
STD_OUTPUT_HANDLE  . . . . . . .	Number	 -0000000Bh   
SetConsoleTitle  . . . . . . . .	Text   	 SetConsoleTitleA
TAB  . . . . . . . . . . . . . .	Number	 00000009h   
TRUE . . . . . . . . . . . . . .	Number	 00000001h   
TRUNCATE_EXISTING  . . . . . . .	Number	 00000005h   
VK_11  . . . . . . . . . . . . .	Number	 000000BDh   
VK_12  . . . . . . . . . . . . .	Number	 000000BBh   
VK_ADD . . . . . . . . . . . . .	Number	 0000006Bh   
VK_BACK  . . . . . . . . . . . .	Number	 00000008h   
VK_CANCEL  . . . . . . . . . . .	Number	 00000003h   
VK_CAPITAL . . . . . . . . . . .	Number	 00000014h   
VK_CLEAR . . . . . . . . . . . .	Number	 0000000Ch   
VK_CONTROL . . . . . . . . . . .	Number	 00000011h   
VK_DECIMAL . . . . . . . . . . .	Number	 0000006Eh   
VK_DELETE  . . . . . . . . . . .	Number	 0000002Eh   
VK_DIVIDE  . . . . . . . . . . .	Number	 0000006Fh   
VK_DOWN  . . . . . . . . . . . .	Number	 00000028h   
VK_END . . . . . . . . . . . . .	Number	 00000023h   
VK_ESCAPE  . . . . . . . . . . .	Number	 0000001Bh   
VK_EXECUTE . . . . . . . . . . .	Number	 0000002Bh   
VK_F10 . . . . . . . . . . . . .	Number	 00000079h   
VK_F11 . . . . . . . . . . . . .	Number	 0000007Ah   
VK_F12 . . . . . . . . . . . . .	Number	 0000007Bh   
VK_F13 . . . . . . . . . . . . .	Number	 0000007Ch   
VK_F14 . . . . . . . . . . . . .	Number	 0000007Dh   
VK_F15 . . . . . . . . . . . . .	Number	 0000007Eh   
VK_F16 . . . . . . . . . . . . .	Number	 0000007Fh   
VK_F17 . . . . . . . . . . . . .	Number	 00000080h   
VK_F18 . . . . . . . . . . . . .	Number	 00000081h   
VK_F19 . . . . . . . . . . . . .	Number	 00000082h   
VK_F1  . . . . . . . . . . . . .	Number	 00000070h   
VK_F20 . . . . . . . . . . . . .	Number	 00000083h   
VK_F21 . . . . . . . . . . . . .	Number	 00000084h   
VK_F22 . . . . . . . . . . . . .	Number	 00000085h   
VK_F23 . . . . . . . . . . . . .	Number	 00000086h   
VK_F24 . . . . . . . . . . . . .	Number	 00000087h   
VK_F2  . . . . . . . . . . . . .	Number	 00000071h   
VK_F3  . . . . . . . . . . . . .	Number	 00000072h   
VK_F4  . . . . . . . . . . . . .	Number	 00000073h   
VK_F5  . . . . . . . . . . . . .	Number	 00000074h   
VK_F6  . . . . . . . . . . . . .	Number	 00000075h   
VK_F7  . . . . . . . . . . . . .	Number	 00000076h   
VK_F8  . . . . . . . . . . . . .	Number	 00000077h   
VK_F9  . . . . . . . . . . . . .	Number	 00000078h   
VK_HELP  . . . . . . . . . . . .	Number	 0000002Fh   
VK_HOME  . . . . . . . . . . . .	Number	 00000024h   
VK_INSERT  . . . . . . . . . . .	Number	 0000002Dh   
VK_LBUTTON . . . . . . . . . . .	Number	 00000001h   
VK_LCONTROL  . . . . . . . . . .	Number	 000000A2h   
VK_LEFT  . . . . . . . . . . . .	Number	 00000025h   
VK_LMENU . . . . . . . . . . . .	Number	 000000A4h   
VK_LSHIFT  . . . . . . . . . . .	Number	 000000A0h   
VK_MENU  . . . . . . . . . . . .	Number	 00000012h   
VK_MULTIPLY  . . . . . . . . . .	Number	 0000006Ah   
VK_NEXT  . . . . . . . . . . . .	Number	 00000022h   
VK_NUMLOCK . . . . . . . . . . .	Number	 00000090h   
VK_NUMPAD0 . . . . . . . . . . .	Number	 00000060h   
VK_NUMPAD1 . . . . . . . . . . .	Number	 00000061h   
VK_NUMPAD2 . . . . . . . . . . .	Number	 00000062h   
VK_NUMPAD3 . . . . . . . . . . .	Number	 00000063h   
VK_NUMPAD4 . . . . . . . . . . .	Number	 00000064h   
VK_NUMPAD5 . . . . . . . . . . .	Number	 00000065h   
VK_NUMPAD6 . . . . . . . . . . .	Number	 00000066h   
VK_NUMPAD7 . . . . . . . . . . .	Number	 00000067h   
VK_NUMPAD8 . . . . . . . . . . .	Number	 00000068h   
VK_NUMPAD9 . . . . . . . . . . .	Number	 00000069h   
VK_PAUSE . . . . . . . . . . . .	Number	 00000013h   
VK_PRINT . . . . . . . . . . . .	Number	 0000002Ah   
VK_PRIOR . . . . . . . . . . . .	Number	 00000021h   
VK_RBUTTON . . . . . . . . . . .	Number	 00000002h   
VK_RCONTROL  . . . . . . . . . .	Number	 000000A3h   
VK_RETURN  . . . . . . . . . . .	Number	 0000000Dh   
VK_RIGHT . . . . . . . . . . . .	Number	 00000027h   
VK_RMENU . . . . . . . . . . . .	Number	 000000A5h   
VK_RSHIFT  . . . . . . . . . . .	Number	 000000A1h   
VK_SCROLL  . . . . . . . . . . .	Number	 00000091h   
VK_SEPARATER . . . . . . . . . .	Number	 0000006Ch   
VK_SHIFT . . . . . . . . . . . .	Number	 00000010h   
VK_SNAPSHOT  . . . . . . . . . .	Number	 0000002Ch   
VK_SPACE . . . . . . . . . . . .	Number	 00000020h   
VK_SUBTRACT  . . . . . . . . . .	Number	 0000006Dh   
VK_TAB . . . . . . . . . . . . .	Number	 00000009h   
VK_UP  . . . . . . . . . . . . .	Number	 00000026h   
WINDOW_BUFFER_SIZE_EVENT . . . .	Number	 00000004h   
WriteConsoleOutputCharacter  . .	Text   	 WriteConsoleOutputCharacterA
WriteConsole . . . . . . . . . .	Text   	 WriteConsoleA
avg  . . . . . . . . . . . . . .	DWord	 000002F7 _DATA	
black  . . . . . . . . . . . . .	Number	 00000000h   
blue . . . . . . . . . . . . . .	Number	 00000001h   
brown  . . . . . . . . . . . . .	Number	 00000006h   
count_1  . . . . . . . . . . . .	DWord	 00000314 _DATA	
count  . . . . . . . . . . . . .	DWord	 000002FB _DATA	
cyan . . . . . . . . . . . . . .	Number	 00000003h   
disp1  . . . . . . . . . . . . .	Byte	 00000249 _DATA	
disp2  . . . . . . . . . . . . .	Byte	 00000266 _DATA	
disp3  . . . . . . . . . . . . .	Byte	 00000283 _DATA	
disp4  . . . . . . . . . . . . .	Byte	 000002A5 _DATA	
excd1  . . . . . . . . . . . . .	Byte	 00000318 _DATA	
excd2  . . . . . . . . . . . . .	Byte	 0000032A _DATA	
excd3  . . . . . . . . . . . . .	Byte	 0000038E _DATA	
excd4  . . . . . . . . . . . . .	Byte	 000003EF _DATA	
exit . . . . . . . . . . . . . .	Text   	 INVOKE ExitProcess,0
floatp_1 . . . . . . . . . . . .	DWord	 00000438 _DATA	
floatp . . . . . . . . . . . . .	Byte	 0000040D _DATA	
fltpro . . . . . . . . . . . . .	Byte	 0000040F _DATA	
goodbye  . . . . . . . . . . . .	Byte	 000002BD _DATA	
gray . . . . . . . . . . . . . .	Number	 00000008h   
green  . . . . . . . . . . . . .	Number	 00000002h   
input1 . . . . . . . . . . . . .	Byte	 0000014F _DATA	
input2 . . . . . . . . . . . . .	Byte	 00000182 _DATA	
intro1 . . . . . . . . . . . . .	Byte	 00000000 _DATA	
intro2 . . . . . . . . . . . . .	Byte	 00000034 _DATA	
lightBlue  . . . . . . . . . . .	Number	 00000009h   
lightCyan  . . . . . . . . . . .	Number	 0000000Bh   
lightGray  . . . . . . . . . . .	Number	 00000007h   
lightGreen . . . . . . . . . . .	Number	 0000000Ah   
lightMagenta . . . . . . . . . .	Number	 0000000Dh   
lightRed . . . . . . . . . . . .	Number	 0000000Ch   
magenta  . . . . . . . . . . . .	Number	 00000005h   
maxNum . . . . . . . . . . . . .	DWord	 000002EB _DATA	
minNum . . . . . . . . . . . . .	DWord	 000002EF _DATA	
msg1 . . . . . . . . . . . . . .	Byte	 000001D5 _DATA	
msg2 . . . . . . . . . . . . . .	Byte	 0000020D _DATA	
msg3 . . . . . . . . . . . . . .	Byte	 0000021A _DATA	
msg4 . . . . . . . . . . . . . .	Byte	 0000022A _DATA	
neg1k  . . . . . . . . . . . . .	DWord	 0000042C _DATA	
pos1k  . . . . . . . . . . . . .	DWord	 00000430 _DATA	
prompt1  . . . . . . . . . . . .	Byte	 0000011D _DATA	
prompt2  . . . . . . . . . . . .	Byte	 00000131 _DATA	
prompt3  . . . . . . . . . . . .	Byte	 0000013F _DATA	
red  . . . . . . . . . . . . . .	Number	 00000004h   
rema . . . . . . . . . . . . . .	DWord	 00000409 _DATA	
subt . . . . . . . . . . . . . .	DWord	 00000434 _DATA	
sum  . . . . . . . . . . . . . .	DWord	 000002F3 _DATA	
userName . . . . . . . . . . . .	Byte	 000002FF _DATA	
white  . . . . . . . . . . . . .	Number	 0000000Fh   
wsprintf . . . . . . . . . . . .	Text   	 wsprintfA
yellow . . . . . . . . . . . . .	Number	 0000000Eh   

	   0 Warnings
	   0 Errors
